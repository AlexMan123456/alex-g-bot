generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  user_id     String           @id
  username    String           @db.VarChar(100)
  global_name String           @db.VarChar(100)
  bot_user    Boolean
  suggestions Suggestion[]
  guilds      UsersAndGuilds[]

  @@map("users")
}

model Suggestion {
  suggestion_id String           @id
  user_id       String
  title         String           @db.VarChar(100)
  description   String
  status        SuggestionStatus @default(pending)
  author        User             @relation(fields: [user_id], references: [user_id], onDelete: Cascade)

  @@map("suggestions")
}

model Guild {
  guild_id               String           @id
  name                   String
  leave_message          String           @default("{user} has left {guild}")
  welcome_message        String           @default("{user} has joined {guild}")
  suggestions_channel_id String?
  mod_role_id            String?
  leave_channel_id       String?
  welcome_channel_id     String?
  error_log_id           String?
  users                  UsersAndGuilds[]

  @@map("guilds")
}

model UsersAndGuilds {
  user_id       String
  guild_id      String
  joined_at     DateTime
  money_current Int?     @default(100)
  money_savings Int?     @default(0)
  guild         Guild    @relation(fields: [guild_id], references: [guild_id], onDelete: Cascade)
  user          User     @relation(fields: [user_id], references: [user_id], onDelete: Cascade)

  @@id([user_id, guild_id])
  @@map("users_and_guilds")
}

enum SuggestionStatus {
  pending
  resolved
  rejected
}
